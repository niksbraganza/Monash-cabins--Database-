-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0806
--   at:        2018-09-11 13:48:28 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

SET ECHO ON;
SPOOL mc_schema_output.txt;
DROP TABLE RATES;
DROP TABLE CONTRACT;
DROP TABLE BOOKING;
DROP TABLE RUNNING_SHEET;
DROP TABLE CLEANER;
DROP TABLE CABIN;
DROP TABLE REVIEW;
DROP TABLE GUEST;
DROP TABLE RESORT;
DROP TABLE POINT_OF_INTEREST;
DROP TABLE TOWN;
DROP TABLE MANAGER;
DROP SEQUENCE running_sheet_cabin_no_seq;
DROP SEQUENCE resort_resort_id_seq;
DROP SEQUENCE manager_manager_id_seq;
DROP SEQUENCE guest_guest_no_seq;
DROP SEQUENCE cleaner_contractor_no_seq;
DROP SEQUENCE cabin_cabin_no_seq;


CREATE TABLE booking (
    booking_start_date   DATE NOT NULL,
    booking_end_date     DATE NOT NULL,
    booking_adults       NUMBER(2) NOT NULL,
    booking_children     NUMBER(2) NOT NULL,
    booking_pets         NUMBER(2) NOT NULL,
    cabin_no             NUMBER(3) NOT NULL,
    resort_id            NUMBER(5) NOT NULL,
    guest_no             NUMBER(6) NOT NULL
);

COMMENT ON COLUMN booking.booking_start_date IS
    'Booking_Start_Date = Booking start date';

COMMENT ON COLUMN booking.booking_end_date IS
    'Booking_End_Date = Booking end date';

COMMENT ON COLUMN booking.booking_adults IS
    'Booking_Adults = Number of adults';

COMMENT ON COLUMN booking.booking_children IS
    'Booking_Children = Number of children';

COMMENT ON COLUMN booking.booking_pets IS
    'Booking_Pets = Number of pets';

COMMENT ON COLUMN booking.cabin_no IS
    'Cabin_No = Cabin number';

COMMENT ON COLUMN booking.resort_id IS
    'Resort_ID = Resort ID';

COMMENT ON COLUMN booking.guest_no IS
    'Guest_No = Guest number';

ALTER TABLE booking
    ADD CONSTRAINT booking_pk PRIMARY KEY ( booking_start_date,
                                            cabin_no,
                                            resort_id,
                                            guest_no );

CREATE TABLE cabin (
    cabin_no               NUMBER(3) NOT NULL,
    cabin_bedroom          NUMBER(2) NOT NULL,
    cabin_sleep_capacity   NUMBER(2) NOT NULL,
    cabin_desc             VARCHAR2(300) NOT NULL,
    cabin_stdcleantime     NUMBER(2) NOT NULL,
    resort_id              NUMBER(5) NOT NULL,
    cabin_type             VARCHAR2(10)
);

COMMENT ON COLUMN cabin.cabin_no IS
    'Cabin_No = Cabin number';

COMMENT ON COLUMN cabin.cabin_bedroom IS
    'Cabin_Bedroom = Number of bedrooms';

COMMENT ON COLUMN cabin.cabin_sleep_capacity IS
    'Cabin_Sleep_Capacity = Number of people who can sleep';

COMMENT ON COLUMN cabin.cabin_desc IS
    'Cabin_Desc = Cabin description';

COMMENT ON COLUMN cabin.cabin_stdcleantime IS
    'Cabin_Stdcleantime = Cabin standard cleaning time';

COMMENT ON COLUMN cabin.resort_id IS
    'Resort_ID = Resort ID';

COMMENT ON COLUMN cabin.cabin_type IS
    'Cabin_Type = Cabin type';

ALTER TABLE cabin ADD CONSTRAINT cabin_pk PRIMARY KEY ( cabin_no,
                                                        resort_id );

CREATE TABLE cleaner (
    contractor_no        NUMBER(3) NOT NULL,
    contractor_fname     VARCHAR2(50),
    contractor_lname     VARCHAR2(50),
    contractor_rate      NUMBER(3),
    contractor_phone     NUMBER(10),
    contractor_address   VARCHAR2(1000)
);

COMMENT ON COLUMN cleaner.contractor_fname IS
    'Contractor_Fname = Contractor first name';

COMMENT ON COLUMN cleaner.contractor_lname IS
    'Contractor_Lname = Contractor last name';

COMMENT ON COLUMN cleaner.contractor_rate IS
    'Contractor_Rate = Contractor hourly rate';

COMMENT ON COLUMN cleaner.contractor_phone IS
    'Contractor_Phone = Contractor phone number';

COMMENT ON COLUMN cleaner.contractor_address IS
    'Contractor_Address = contractor address';

ALTER TABLE cleaner ADD CONSTRAINT cleaner_pk PRIMARY KEY ( contractor_no );

CREATE TABLE contract (
    contract_type        VARCHAR2(10),
    contract_rate        NUMBER(3),
    contract_startdate   DATE NOT NULL,
    contract_enddate     DATE,
    contractor_no        NUMBER(3) NOT NULL,
    contractor_address   CHAR(100)
);

COMMENT ON COLUMN contract.contract_type IS
    'Contract_Type = Contract type';

COMMENT ON COLUMN contract.contract_rate IS
    'Contract_Rate = Contract hourly rate';

COMMENT ON COLUMN contract.contract_startdate IS
    'Contract_Startdate = Contract start date';

COMMENT ON COLUMN contract.contract_enddate IS
    'Contract_Enddate = Contract end date';

ALTER TABLE contract ADD CONSTRAINT contract_pk PRIMARY KEY ( contract_startdate,
                                                              contractor_no );

CREATE TABLE guest (
    guest_no        NUMBER(6) NOT NULL,
    guest_name      VARCHAR2(50) NOT NULL,
    guest_address   VARCHAR2(150) NOT NULL,
    guest_country   VARCHAR2(50) NOT NULL,
    guest_email     VARCHAR2(50) NOT NULL,
    guest_phone     NUMBER(10) NOT NULL
);

COMMENT ON COLUMN guest.guest_no IS
    'Guest_No = Guest number';

COMMENT ON COLUMN guest.guest_name IS
    'Guest_Name = Guest name';

COMMENT ON COLUMN guest.guest_address IS
    'Guest_Address = Guest Address';

COMMENT ON COLUMN guest.guest_country IS
    'Guest_Country = guest country';

COMMENT ON COLUMN guest.guest_email IS
    'Guest_Email = Guest email';

COMMENT ON COLUMN guest.guest_phone IS
    'Guest_Phone = Guest phone number';

ALTER TABLE guest ADD CONSTRAINT guest_pk PRIMARY KEY ( guest_no );

CREATE TABLE manager (
    manager_id        NUMBER(4) NOT NULL,
    manager_name      VARCHAR2(50) NOT NULL,
    manager_address   VARCHAR2(150) NOT NULL,
    manager_phone     NUMBER(10) NOT NULL
);

COMMENT ON COLUMN manager.manager_name IS
    'Manager_Name = Manager name';

COMMENT ON COLUMN manager.manager_address IS
    'Manager_Address = Manager address';

COMMENT ON COLUMN manager.manager_phone IS
    'Manager_Phone = Manager phone number';

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE point_of_interest (
    town_longitude    NUMBER(6,2) NOT NULL,
    town_latitude     NUMBER(6,2) NOT NULL,
    poi_type          VARCHAR2(30) NOT NULL,
    poi_street_name   VARCHAR2(30) NOT NULL,
    poi_desc          VARCHAR2(150) NOT NULL,
    poi_opn_time      NUMBER(4,2) NOT NULL,
    poi_cls_time      NUMBER(4,2) NOT NULL,
    poi_name          VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN point_of_interest.town_longitude IS
    'Town_Longitude = Town longitude';

COMMENT ON COLUMN point_of_interest.town_latitude IS
    'Town_Latitude= Town latitude';

COMMENT ON COLUMN point_of_interest.poi_type IS
    'POI_Type = Point of interest type';

COMMENT ON COLUMN point_of_interest.poi_street_name IS
    'POI_Street_Name';

COMMENT ON COLUMN point_of_interest.poi_name IS
    'POI_Name = point of interest name';

ALTER TABLE point_of_interest
    ADD CONSTRAINT point_of_interest_pk PRIMARY KEY ( town_longitude,
                                                      town_latitude,
                                                      poi_type,
                                                      poi_street_name,
                                                      poi_name );

CREATE TABLE rates (
    booking_start_date   DATE NOT NULL,
    cabin_no             NUMBER(3) NOT NULL,
    resort_id            NUMBER(5) NOT NULL,
    stay_period          NUMBER(2),
    guest_no             NUMBER(6) NOT NULL
);

COMMENT ON COLUMN rates.booking_start_date IS
    'Booking_Start_Date = Booking start date';

COMMENT ON COLUMN rates.cabin_no IS
    'Cabin_No = Cabin number';

COMMENT ON COLUMN rates.resort_id IS
    'Resort_ID = Resort ID';

COMMENT ON COLUMN rates.stay_period IS
    'Stay_Period = Stay period';

COMMENT ON COLUMN rates.guest_no IS
    'Guest_No = Guest number';

ALTER TABLE rates
    ADD CONSTRAINT rates_pk PRIMARY KEY ( booking_start_date,
                                          cabin_no,
                                          resort_id,
                                          guest_no );

CREATE TABLE resort (
    town_longitude   NUMBER(6,2) NOT NULL,
    town_latitude    NUMBER(6,2) NOT NULL,
    resort_id        NUMBER(5) NOT NULL,
    resort_name      VARCHAR2(50) NOT NULL,
    resort_address   VARCHAR2(100) NOT NULL,
    star_rating      NUMBER(2,1) NOT NULL,
    pets_allowed     CHAR(1) NOT NULL,
    manager_id       NUMBER(4) NOT NULL
);

COMMENT ON COLUMN resort.town_longitude IS
    'Town_Longitude = Town longitude';

COMMENT ON COLUMN resort.town_latitude IS
    'Town_Latitude= Town latitude';

COMMENT ON COLUMN resort.resort_id IS
    'Resort_ID = Resort ID';

COMMENT ON COLUMN resort.resort_name IS
    'Resort_Name = Resort name';

COMMENT ON COLUMN resort.resort_address IS
    'Resort_Address = resort address';

COMMENT ON COLUMN resort.star_rating IS
    'Star_Rating = Resort rating';

COMMENT ON COLUMN resort.pets_allowed IS
    'Pets_Allowed = pets allowance';

ALTER TABLE resort ADD CONSTRAINT resort_pk PRIMARY KEY ( resort_id );

CREATE TABLE review (
    review_date     DATE NOT NULL,
    guest_no        NUMBER(6) NOT NULL,
    resort_id       NUMBER(5) NOT NULL,
    review_rating   NUMBER(1)
);

COMMENT ON COLUMN review.review_date IS
    'Review_Date = Review date';

COMMENT ON COLUMN review.guest_no IS
    'Guest_No = Guest number';

COMMENT ON COLUMN review.resort_id IS
    'Resort_ID = Resort ID';

COMMENT ON COLUMN review.review_rating IS
    'Review_Rating = Review rating';

ALTER TABLE review
    ADD CONSTRAINT review_pk PRIMARY KEY ( review_date,
                                           resort_id,
                                           guest_no );

CREATE TABLE running_sheet (
    cabin_no         NUMBER(3) NOT NULL,
    resort_id        NUMBER(5) NOT NULL,
    charge           NUMBER(3),
    act_cleantime    NUMBER(2),
    contractor_no    NUMBER(3) NOT NULL,
    clean_date       DATE NOT NULL,
    contractor_no1   NUMBER NOT NULL,
    contractor_no3   NUMBER NOT NULL
);

COMMENT ON COLUMN running_sheet.cabin_no IS
    'Cabin_No = Cabin number';

COMMENT ON COLUMN running_sheet.resort_id IS
    'Resort_ID = Resort ID';

COMMENT ON COLUMN running_sheet.charge IS
    'Charge = Total charge';

COMMENT ON COLUMN running_sheet.act_cleantime IS
    'Act_Cleantime = Actual cleaning time';

COMMENT ON COLUMN running_sheet.clean_date IS
    'Clean_date = Date of cleaning';

CREATE UNIQUE INDEX running_sheet__idx ON
    running_sheet (
        contractor_no
    ASC );

ALTER TABLE running_sheet
    ADD CONSTRAINT running_sheet_pk PRIMARY KEY ( cabin_no,
                                                  resort_id,
                                                  clean_date,
                                                  contractor_no3 );

CREATE TABLE town (
    town_longitude       NUMBER(6,2) NOT NULL,
    town_latitude        NUMBER(6,2) NOT NULL,
    town_name            VARCHAR2(50) NOT NULL,
    town_state           VARCHAR2(50) NOT NULL,
    town_avg_summ_temp   NUMBER(2) NOT NULL,
    town_avg_win_temp    NUMBER(2) NOT NULL,
    town_population      NUMBER(7) NOT NULL,
    town_elevation       NUMBER(5) NOT NULL
);

COMMENT ON COLUMN town.town_longitude IS
    'Town_Longitude = Town longitude';

COMMENT ON COLUMN town.town_latitude IS
    'Town_Latitude= Town latitude';

COMMENT ON COLUMN town.town_name IS
    'Town_Name = Town name';

COMMENT ON COLUMN town.town_state IS
    'Town_State = Stateof the town';

COMMENT ON COLUMN town.town_avg_summ_temp IS
    'Town_Avg_Summ_Temp = Average summer temperature';

COMMENT ON COLUMN town.town_avg_win_temp IS
    'Town_Avg_Win_Temp = Average winter temperatue';

COMMENT ON COLUMN town.town_population IS
    'Town_Population = Town population';

COMMENT ON COLUMN town.town_elevation IS
    'Town_Elevation - Town elevation';

ALTER TABLE town ADD CONSTRAINT town_pk PRIMARY KEY ( town_longitude,
                                                      town_latitude );

ALTER TABLE rates
    ADD CONSTRAINT booking_rates FOREIGN KEY ( booking_start_date,
                                               cabin_no,
                                               resort_id,
                                               guest_no )
        REFERENCES booking ( booking_start_date,
                             cabin_no,
                             resort_id,
                             guest_no );

ALTER TABLE booking
    ADD CONSTRAINT cabin_booking FOREIGN KEY ( cabin_no,
                                               resort_id )
        REFERENCES cabin ( cabin_no,
                           resort_id );

ALTER TABLE running_sheet
    ADD CONSTRAINT cabin_runningsheet FOREIGN KEY ( cabin_no,
                                                    resort_id )
        REFERENCES cabin ( cabin_no,
                           resort_id );

ALTER TABLE contract
    ADD CONSTRAINT contractor__contract FOREIGN KEY ( contractor_no )
        REFERENCES cleaner ( contractor_no );

ALTER TABLE running_sheet
    ADD CONSTRAINT contractor_runningsheet FOREIGN KEY ( contractor_no )
        REFERENCES cleaner ( contractor_no );

ALTER TABLE booking
    ADD CONSTRAINT guest_booking FOREIGN KEY ( guest_no )
        REFERENCES guest ( guest_no );

ALTER TABLE review
    ADD CONSTRAINT guest_review FOREIGN KEY ( guest_no )
        REFERENCES guest ( guest_no );

ALTER TABLE resort
    ADD CONSTRAINT manager_resort FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE cabin
    ADD CONSTRAINT resort_cabin FOREIGN KEY ( resort_id )
        REFERENCES resort ( resort_id );

ALTER TABLE review
    ADD CONSTRAINT resort_review FOREIGN KEY ( resort_id )
        REFERENCES resort ( resort_id );

ALTER TABLE point_of_interest
    ADD CONSTRAINT town_poi FOREIGN KEY ( town_longitude,
                                          town_latitude )
        REFERENCES town ( town_longitude,
                          town_latitude );

ALTER TABLE resort
    ADD CONSTRAINT town_resort FOREIGN KEY ( town_longitude,
                                             town_latitude )
        REFERENCES town ( town_longitude,
                          town_latitude );

CREATE OR REPLACE TRIGGER fkntm_resort BEFORE
    UPDATE OF manager_id ON resort
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table Resort is violated');
END;
/

CREATE SEQUENCE cabin_cabin_no_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cabin_cabin_no_trg BEFORE
    INSERT ON cabin
    FOR EACH ROW
    WHEN ( new.cabin_no IS NULL )
BEGIN
    :new.cabin_no := cabin_cabin_no_seq.nextval;
END;
/

CREATE SEQUENCE cleaner_contractor_no_seq START WITH 2000 MINVALUE 2000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cleaner_contractor_no_trg BEFORE
    INSERT ON cleaner
    FOR EACH ROW
    WHEN ( new.contractor_no IS NULL )
BEGIN
    :new.contractor_no := cleaner_contractor_no_seq.nextval;
END;
/

CREATE SEQUENCE guest_guest_no_seq START WITH 400000 MINVALUE 400000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER guest_guest_no_trg BEFORE
    INSERT ON guest
    FOR EACH ROW
    WHEN ( new.guest_no IS NULL )
BEGIN
    :new.guest_no := guest_guest_no_seq.nextval;
END;
/

CREATE SEQUENCE manager_manager_id_seq START WITH 5000 MINVALUE 5000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER manager_manager_id_trg BEFORE
    INSERT ON manager
    FOR EACH ROW
    WHEN ( new.manager_id IS NULL )
BEGIN
    :new.manager_id := manager_manager_id_seq.nextval;
END;
/

CREATE SEQUENCE resort_resort_id_seq START WITH 10000 MINVALUE 10000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER resort_resort_id_trg BEFORE
    INSERT ON resort
    FOR EACH ROW
    WHEN ( new.resort_id IS NULL )
BEGIN
    :new.resort_id := resort_resort_id_seq.nextval;
END;
/

CREATE SEQUENCE running_sheet_cabin_no_seq START WITH 1 MINVALUE 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER running_sheet_cabin_no_trg BEFORE
    INSERT ON running_sheet
    FOR EACH ROW
    WHEN ( new.cabin_no IS NULL )
BEGIN
    :new.cabin_no := running_sheet_cabin_no_seq.nextval;
END;
/
SET ECHO OFF;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             1
-- ALTER TABLE                             24
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
